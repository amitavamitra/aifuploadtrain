apiVersion: argoproj.io/v1alpha1
kind: WorkflowTemplate
metadata:
  name: crud
  generateName: argo-mnist-template-
  annotations:
    scenarios.ai.sap.com/description: crud
    scenarios.ai.sap.com/name: crud
    executables.ai.sap.com/name: crud
    executables.ai.sap.com/description: "Create crud with mongo"
    artifacts.ai.sap.com/training-data.kind: "dataset"
    artifacts.ai.sap.com/model.kind: "model"
  labels:
    ai.sap.com/version: 0.1.0
    scenarios.ai.sap.com/id: crud
spec:
  imagePullSecrets:
  - name: amit-docker-registry-secret
  entrypoint: crud
  
  volumeClaimTemplates:
  - metadata:
      name: workdir
    spec:
      accessModes: [ "ReadWriteOnce" ]
      resources:
        requests:
          storage: 1Gi

  arguments:
    parameters:
    - name: training-epochs
      value: 30

  templates:
  - name: crud
    steps:
    - - name: material-inputs
        template: material-inputs
      - name: supplier-inputs
        template: supplier-inputs
    - - name: purchase-orders
        template: purchase-orders

  - name: material-inputs
    metadata:
      annotations:
                
        traffic.sidecar.istio.io/includeOutboundIPRanges: 172.20.0.0/16,100.64.0.0/10,100.100.0.0/16,169.254.169.254/32,100.64.0.0/13,100.96.0.0/11,10.250.0.0/16,100.96.0.0/11,10.250.0.0/16,100.64.0.0/13
        
    container:
      image: "mlf.docker.repositories.sapcdn.io/crud:latest"
      
      
      command: [sh, -c]
      args:
      - >
        mkdir -p /mnt/model;
        mkdir -p /mnt/tmp;
        node /app.js ;
       
      env:
      - name: DATA_FOLDER
        value: /training/input_data
      - name: OUT_FOLDER
        value: /mnt/tmp
      volumeMounts:
      - name: workdir
        mountPath: /mnt/tmp  
    
    inputs:
      artifacts:
      - name: training-data
        path: /training/input_data
        archive:
          none: {}
         
    outputs:
      artifacts:
      - name: product
        path: /mnt/tmp
        globalName: product
        archive:
          none: {}   
        
  - name: supplier-inputs 
    metadata:
      annotations:
                
        traffic.sidecar.istio.io/includeOutboundIPRanges: 172.20.0.0/16,100.64.0.0/10,100.100.0.0/16,169.254.169.254/32,100.64.0.0/13,100.96.0.0/11,10.250.0.0/16,100.96.0.0/11,10.250.0.0/16,100.64.0.0/13
        
    container:
      image: "mlf.docker.repositories.sapcdn.io/crud:latest"
      
      command: [sh, -c]
      args:
      - >
        node /supp.js;
      
      
      env:
      - name: DATA_FOLDER
        value: /training/input_data
      - name: OUT_FOLDER
        value: /mnt/tmp
      volumeMounts:
      - name: workdir
        mountPath: /mnt/tmp
    
    inputs:
      artifacts:
      - name: training-data
        path: /training/input_data
        archive:
          none: {}
    
    
      
    outputs:
      artifacts:
      - name: supplier
        path: /mnt/tmp
        globalName: supplier
        archive:
          none: {}  
  
  - name: purchase-orders
    metadata:
      annotations:
                
        traffic.sidecar.istio.io/includeOutboundIPRanges: 172.20.0.0/16,100.64.0.0/10,100.100.0.0/16,169.254.169.254/32,100.64.0.0/13,100.96.0.0/11,10.250.0.0/16,100.96.0.0/11,10.250.0.0/16,100.64.0.0/13
        
    container:
      image: "mlf.docker.repositories.sapcdn.io/crud:latest"
      
      command: [sh, -c]
      args:
      - >
        node /order.js;
           
      
      env:
        
      - name: DATA_FOLDER
        value: /training/input_data
      - name: OUTPUT_FOLDER
        value: /mnt/tmp
        
      
      volumeMounts:
      - name: workdir
        mountPath: /mnt/tmp
    
    inputs:
      artifacts:
      - name: product
        path: /training/input_data
        archive:
          none: {}  